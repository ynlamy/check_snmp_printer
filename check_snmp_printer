#!/bin/bash

# check_snmp_printer
# Description : Check the status of a printer
# Version : 1.0
# Author : Yoann LAMY
# Licence : GPLv2
# 
# Version : 1.1
# Author : Michael Nolte (@mn26826)
# Changes and improvements:
#
# * Added check types "MODEL" and "SERIAL" for parameter "-t"
# * Added parameter "-n" for using SNMPGETNEXT instead of SNMPGET
# * Changed french variable names to english
# * Printer is tested by a single ping before firing the snmp commands. Just to
#   ensure the device is accessable. If the printer is not responding (turned 
#   off) the state defined in $STATE_NOTRESPONDING is returned. By default this 
#   is "OK" to avoid warnings for devices that are not running 24x7.
# * Changed the way consumables are interpreted. Now the REMAINING value is 
#   returned. Seemed more intuitive to me.
# * Used OIDs can be overwritten by parameters -X (OID_1), -Y (OID_2) and -Z 
#   (OID_3) if the default OIDs in this plugin are not suitable for your 
#   specific device.
#   Use -X for check types PAGE, MODEL and SERIAL.
#   Use -X, -Y and -Z for check type CONSUMABLE. OID_1 replaces OID_NAME, OID_2
#   replaces OID_TOTAL, OID_3 replaces OID_STATUS.

# Commands
CMD_BASENAME="/bin/basename"
CMD_SNMPGET="/usr/bin/snmpget"
CMD_SNMPGETNEXT="/usr/bin/snmpgetnext"
CMD_SNMPWALK="/usr/bin/snmpwalk"
CMD_GREP="/bin/grep"
CMD_AWK="/bin/awk"
CMD_EXPR="/usr/bin/expr"
CMD_PING="/usr/bin/ping"

# Script name
SCRIPTNAME=`$CMD_BASENAME $0`

# Version
VERSION="1.1"

# Plugin return codes
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

# What should be the state if the printer is not responding?
STATE_NOTRESPONDING=$STATE_OK

# Default OID (Printer-MIB)
OID_NAME=".1.3.6.1.2.1.43.11.1.1.6.1"
OID_TOTAL=".1.3.6.1.2.1.43.11.1.1.8.1"
OID_STATUS=".1.3.6.1.2.1.43.11.1.1.9.1"

OID_NAME_OTHER=".1.3.6.1.2.1.43.12.1.1.4.1"
OID_TOTAL_OTHER=".1.3.6.1.2.1.43.10.2.1.9.1"
OID_STATUS_OTHER=".1.3.6.1.2.1.43.10.2.1.10.1"

OID_PAGE=".1.3.6.1.2.1.43.10.2.1.4.1.1"

OID_MODEL=".1.3.6.1.2.1.25.3.2.1.3.1"
OID_SERIAL=".1.3.6.1.2.1.43.5.1.1.17.1"

# Default variables
DESCRIPTION="Unknown"
STATE=$STATE_UNKNOWN

# Default options
COMMUNITY="public"
HOSTNAME="127.0.0.1"
TYPE="page"
CONSUMABLE="black"
WARNING=0
CRITICAL=0
OID_1=""
OID_2=""
OID_3=""

# Option processing
print_usage() {
  echo "Usage: ./check_snmp_printer -H 127.0.0.1 -C public -t consumable -o black -w 15 -c 10"
  echo "  $SCRIPTNAME -H ADDRESS"
  echo "  $SCRIPTNAME -C STRING"
  echo "  $SCRIPTNAME -t STRING"
  echo "  $SCRIPTNAME -w INTEGER"
  echo "  $SCRIPTNAME -c INTEGER"
  echo "  $SCRIPTNAME -n"
  echo "  $SCRIPTNAME -h"
  echo "  $SCRIPTNAME -V"
}

print_version() {
  echo $SCRIPTNAME version $VERSION
  echo ""
  echo "The nagios plugins come with ABSOLUTELY NO WARRANTY."
  echo "You may redistribute copies of the plugins under the terms of the GNU General Public License v2."
}

print_help() {
  print_version
  echo ""
  print_usage
  echo ""
  echo "Check the status of the printer"
  echo ""
  echo "-H ADDRESS"
  echo "   Name or IP address of host (default: 127.0.0.1)"
  echo "-C STRING"
  echo "   Community name for the host's SNMP agent (default: public)"
  echo "-t STRING"
  echo "   Check type (consumable, page, model, serial) (default: page)"
  echo "-o STRING"
  echo "   Consumable (black, cyan, magenta, yellow, drum) (default: black)"
  echo "-w INTEGER"
  echo "   Warning level for consumable in percent (default: 0)"
  echo "-c INTEGER"
  echo "   Critical level for consumable in percent (default: 0)"
  echo "-X STRING"
  echo "   Overwrites OID used in check type PAGE, MODEL and SERIAL. Also used"
  echo "   for check type CONSUMABLE (replaces OID_NAME)"
  echo "-Y STRING"
  echo "   Overwrites OID used in check type CONSUMABLE (replaces OID_TOTAL)"
  echo "-Z STRING"
  echo "   Overwrites OID used in check type CONSUMABLE (replaces OID_STATUS)"
  echo "-n"
  echo "   Use SNMPGETNEXT instead of SNMPGET"
  echo "-h"
  echo "   Print this help screen"
  echo "-V"
  echo "   Print version and license information"
  echo ""
  echo ""
  echo "This plugin uses the 'snmpget' command and 'snmpwalk' command included with the NET-SNMP package."
  echo "This plugin support performance data output."
  echo "If the percentage of the warning level and the critical level are 0, then the script returns a state OK."
}

while getopts H:C:t:o:w:c:hV:X:Y:Z:n OPT
do
  case $OPT in
    H) HOSTNAME="$OPTARG" ;;
    C) COMMUNITY="$OPTARG" ;;
    t) TYPE="$OPTARG" ;;
    o) CONSUMABLE="$OPTARG" ;;
    w) WARNING=$OPTARG ;;
    c) CRITICAL=$OPTARG ;;
    X) OID_1=$OPTARG ;;
    Y) OID_2=$OPTARG ;;
    Z) OID_3=$OPTARG ;;
    n) CMD_SNMPGET=$CMD_SNMPGETNEXT ;;
    h)
      print_help
      exit $STATE_UNKNOWN
      ;;
    V)
      print_version
      exit $STATE_UNKNOWN
      ;;
   esac
done

# Check if printer is alive
$CMD_PING -c 1 $HOSTNAME >/dev/null
if [ "$?" = 0 ]; then
  # Printer is responding

  # Plugin processing
  if [ $TYPE = "consumable" ]; then
    if [ ! -z $OID_1 ]; then
      OID_NAME="$OID_1"
    fi
  
    if [ ! -z $OID_2 ]; then
      OID_TOTAL="$OID_2"
    fi
    
    if [ ! -z $OID_3 ]; then
      OID_STATUS="$OID_3"
    fi
  
    # Check the consumable of the printer (Usage : ./check_snmp_printer -H 127.0.0.1 -C public -t consumable -o black -w 15 -c 10)
    CONSUMABLE_NAME=$CONSUMABLE

    if [ $CONSUMABLE = "black" ]; then
      CONSUMABLE_NAME="black\|cartouche\|toner"
    fi

    CONSUMABLE_ID=`$CMD_SNMPWALK -t 2 -r 2 -v 1 -c $COMMUNITY $HOSTNAME $OID_NAME | $CMD_GREP -i "${CONSUMABLE_NAME}" | $CMD_AWK '{ print $1 }' | $CMD_AWK -F "." '{print $NF}'`
    if [ -z "$CONSUMABLE_ID" ]; then
      CONSUMABLE_ID=`$CMD_SNMPWALK -t 2 -r 2 -v 1 -c $COMMUNITY $HOSTNAME $OID_NAME_OTHER | $CMD_GREP -i "${CONSUMABLE_NAME}" | $CMD_AWK '{ print $1 }' | $CMD_AWK -F "." '{print $NF}'`
    fi

    if [ -n "$CONSUMABLE_ID" ]; then
      CONSUMABLE_TOTAL=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq  $HOSTNAME ${OID_TOTAL}.${CONSUMABLE_ID}`
      CONSUMABLE_STATUS=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq $HOSTNAME ${OID_STATUS}.${CONSUMABLE_ID}`

      if [ ${CONSUMABLE_TOTAL: 0:1} = "-" ]; then
        CONSUMABLE_TOTAL=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq  $HOSTNAME ${OID_TOTAL_OTHER}.${CONSUMABLE_ID}`
        CONSUMABLE_STATUS=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq $HOSTNAME ${OID_STATUS_OTHER}.${CONSUMABLE_ID}`
      fi

      if [ -n "$CONSUMABLE_TOTAL" ] && [ -n "$CONSUMABLE_STATUS" ]; then

        CONSUMABLE_PERCENT=`$CMD_EXPR \( $CONSUMABLE_STATUS \* 100 \) / \( $CONSUMABLE_TOTAL \)`

        if [ $WARNING != 0 ] || [ $CRITICAL != 0 ]; then
          if [ $CONSUMABLE_PERCENT -lt $CRITICAL ] && [ $CRITICAL != 0 ]; then
            STATE=$STATE_CRITICAL
          elif [ $CONSUMABLE_PERCENT -lt $WARNING ] && [ $WARNING != 0 ]; then
            STATE=$STATE_WARNING
          else
            STATE=$STATE_OK
          fi
        else
          STATE=$STATE_OK
        fi

        case "$CONSUMABLE" in
          black)
            CONSUMABLE_NAME="BK"
          ;;
          cyan)
            CONSUMABLE_NAME="C"
          ;;
          magenta)
            CONSUMABLE_NAME="M"
          ;;
          yellow)
            CONSUMABLE_NAME="Y"
          ;;
          drum)
            CONSUMABLE_NAME="Drum"
          ;;
          *)
            CONSUMABLE_NAME=""
        esac

        DESCRIPTION="Remaining $CONSUMABLE_NAME : ${CONSUMABLE_PERCENT}% | cons_remain=${CONSUMABLE_PERCENT};$WARNING;$CRITICAL;0"
      else
        DESCRIPTION="Printer not responding on snmp request."
      fi
    fi
  elif [ $TYPE = "model" ]; then
    if [ ! -z $OID_1 ]; then
      OID_MODEL="$OID_1"
    fi
    # Check model name of the printer (Usage : ./check_snmp_printer -H 127.0.0.1 -C public -t model)
    MODEL=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq $HOSTNAME $OID_MODEL`
    if [ -n "$MODEL" ]; then
      DESCRIPTION="$MODEL"
      STATE=$STATE_OK
    fi
  elif [ $TYPE = "serial" ]; then
    if [ ! -z $OID_1 ]; then
      OID_SERIAL="$OID_1"
    fi
    # Check model name of the printer (Usage : ./check_snmp_printer -H 127.0.0.1 -C public -t model)
    SERIAL=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq $HOSTNAME $OID_SERIAL`
    if [ -n "$SERIAL" ]; then
      DESCRIPTION="S/N: $SERIAL"
      STATE=$STATE_OK
    fi
  elif [ $TYPE = "page" ]; then
    if [ ! -z $OID_1 ]; then
      OID_PAGE="$OID_1"
    fi
    # Check page number of the printer (Usage : ./check_snmp_printer -H 127.0.0.1 -C public -t page)
    PAGES=`$CMD_SNMPGET -t 2 -r 2 -v 1 -c $COMMUNITY -Ovq $HOSTNAME $OID_PAGE`
    if [ -n "$PAGES" ]; then
      DESCRIPTION="Page count : $PAGES | pages=$PAGES;0;0;0"
      STATE=$STATE_OK
    fi
  fi
else
  DESCRIPTION="Printer not responding / turned off."
  STATE=$STATE_NOTRESPONDING
fi

echo $DESCRIPTION
exit $STATE